AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  scheduler

  Sample SAM Template for scheduler

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            # Auth:
            #   Authorizers:
            #     MyCognitoAuth:
            #       AuthorizationScopes:
            #         - scope1
            #         - scope2
            #       UserPoolArn:
            #         Fn::GetAtt:
            #           - MyCognitoUserPool
            #           - Arn
            #       Identity:
            #         Header: MyAuthorizationHeader
            #         ValidationExpression: myauthvalidationexpression


  UsersFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: Users
      Description: Create, Delete, List & Reset admin users
      Role: arn:aws:iam::070618480609:role/TeleApps-Schedule
      CodeUri: admin_users/
      Handler: main.lambda_handler
      Runtime: python3.8
      Events:
        GetUsersAPI:
          Type: Api 
          Properties:
            Path: /users
            Method: 'ANY'
            # Auth:
            #   Authorizer: Sparza_User_Pool
  ResetPasswordFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: ResetPassword
      Description: ResetPassword - admin users
      Role: arn:aws:iam::070618480609:role/TeleApps-Schedule
      CodeUri: admin_users/
      Handler: main.lambda_handler
      Runtime: python3.8
      Events:
        GetUsersAPI:
          Type: Api 
          Properties:
            Path: /password_reset
            Method: 'POST'
            # Auth:
            #   Authorizer: Sparza_User_Pool   

  # BasicAWSApiGateway:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     Name: Basic AWS Api Gateway
  #     StageName: Staging
  #     Auth:
  #       Authorizers:
  #         BasicAuthorizer:
  #           FunctionPayloadType: TOKEN
  #           FunctionArn: !ImportValue BasicAuthorizerFunction-Arn
  #           Identity:
  #             Header: Authorization
  #             ValidationExpression: ^[Bb]earer [-0-9a-zA-z\.]*$
  #             ReauthorizeEvery: 0
  #       DefaultAuthorizer: BasicAuthorizer
    # ApiGatewayApi:
    # Type: AWS::Serverless::Api
    # Properties:
    #   StageName: prod
    #   MethodSettings:
    #     - ThrottlingBurstLimit: 20
    #       ThrottlingRateLimit: 20
    #       HttpMethod: "*"
    #       ResourcePath: "/*"
    #       LoggingLevel: INFO
    #       MetricsEnabled: true
    #   Auth:  (Karua: - This is not working, i have to check)
    #     DefaultAuthorizer: MyCognitoAuthorizer
    #     Authorizers:
    #       MyCognitoAuthorizer:
    #         UserPoolArn: !GetAtt CognitoPool.Arn

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
